// <auto-generated />
using System;
using AplicacionComercial.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AplicacionComercial.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201219121338_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Bodega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("IdtipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("IDTipoDocumento");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("Aniversario")
                        .HasColumnType("date");

                    b.Property<string>("ApellidosContacto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movil")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("NombresContacto")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id", "IdtipoDocumento");

                    b.HasIndex("IdtipoDocumento", "Documento")
                        .IsUnique()
                        .HasDatabaseName("IX_TipoDocumento_Documento");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Concepto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Conceptos");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.ImagenProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.ToTable("ImagenesProducto");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Iva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Tarifa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("IVA");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.MainComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("MainComments");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Medida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Medidas");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Craated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iddepartamento")
                        .HasColumnType("int")
                        .HasColumnName("IdDepartamento");

                    b.Property<int>("Idiva")
                        .HasColumnType("int")
                        .HasColumnName("IdIva");

                    b.Property<int>("Idmedida")
                        .HasColumnType("int")
                        .HasColumnName("IdMedida");

                    b.Property<int?>("IvaId")
                        .HasColumnType("int");

                    b.Property<int?>("MedidaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<decimal>("Precio")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("IvaId");

                    b.HasIndex("MedidaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ApellidosContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdtipoDocumento")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoDocumento");

                    b.Property<string>("Movil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombresContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<string>("Poblacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdtipoDocumento", "Documento")
                        .IsUnique()
                        .HasDatabaseName("IX_IDTipoDocumento_Documento");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.SubComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("MainCommentId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainCommentId");

                    b.ToTable("SubComments");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposDocumentos");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Cliente", b =>
                {
                    b.HasOne("AplicacionComercial.Common.Entities.TipoDocumento", "IdtipoDocumentoNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdtipoDocumento")
                        .HasConstraintName("FK_Cliente_TipoDocumento")
                        .IsRequired();

                    b.Navigation("IdtipoDocumentoNavigation");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.ImagenProducto", b =>
                {
                    b.HasOne("AplicacionComercial.Common.Entities.Producto", "IdproductoNavigation")
                        .WithMany("ImagenesProducto")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_ImagenProducto_Producto")
                        .IsRequired();

                    b.Navigation("IdproductoNavigation");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.MainComment", b =>
                {
                    b.HasOne("AplicacionComercial.Common.Entities.Post", null)
                        .WithMany("MainComments")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Producto", b =>
                {
                    b.HasOne("AplicacionComercial.Common.Entities.Departamento", "Departamento")
                        .WithMany("Producto")
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("AplicacionComercial.Common.Entities.Iva", "Iva")
                        .WithMany("Producto")
                        .HasForeignKey("IvaId");

                    b.HasOne("AplicacionComercial.Common.Entities.Medida", "Medida")
                        .WithMany("Producto")
                        .HasForeignKey("MedidaId");

                    b.Navigation("Departamento");

                    b.Navigation("Iva");

                    b.Navigation("Medida");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Proveedor", b =>
                {
                    b.HasOne("AplicacionComercial.Common.Entities.TipoDocumento", "IdtipoDocumentoNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdtipoDocumento")
                        .HasConstraintName("FK_Proveedor_TipoDocumento")
                        .IsRequired();

                    b.Navigation("IdtipoDocumentoNavigation");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.SubComment", b =>
                {
                    b.HasOne("AplicacionComercial.Common.Entities.MainComment", null)
                        .WithMany("SubComments")
                        .HasForeignKey("MainCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Departamento", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Iva", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.MainComment", b =>
                {
                    b.Navigation("SubComments");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Medida", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Post", b =>
                {
                    b.Navigation("MainComments");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.Producto", b =>
                {
                    b.Navigation("ImagenesProducto");
                });

            modelBuilder.Entity("AplicacionComercial.Common.Entities.TipoDocumento", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Proveedores");
                });
#pragma warning restore 612, 618
        }
    }
}
